import os
import warnings
import pandas as pd

from snakemake.utils import min_version

# Turn off performance warnings
warnings.simplefilter(action='ignore', category=pd.errors.PerformanceWarning)


# Set min version for Snakemake
min_version("7.2.1")

# Read in config
configfile: "config/config.yaml"

# When using --use-conda --use-singularity, this sets the OS used
container: "docker://continuumio/miniconda3"

# Paths
datadir = config['datadir']

# Configuration variables
reference_path = config['reference_path']

# Add resource paths
for name, path in config['references']:

  


## Load fastq files
#regions = config['regions']
#files = (
#    pd.read_csv(config['fastqs'], sep='\t', dtype='object')
#    .set_index(["sample", "pair"])
#    .sort_index())
#
## Sample and pairs names
#samples = list(files.index.levels[0])
#pairs = list(files.index.levels[1])
#
## Ensure all samples are paired
#sample_pairs = (
#        files.reset_index()
#        .groupby('sample')
#        .pair.unique())
#
#if not all([len(v) == 2 for v in sample_pairs]):
#    raise ValueError("Workflow only supports paired-end samples")
#
## Paths
#bwa_index = reference_path + "/{species}/{release}-{build}/bwa-index/index".format(**reference_args)
#
## More paths
#fastqdir   = f"{datadir}/d00_fastq"
#fastpdir   = f"{datadir}/d01_fastp"
#bwadir     = f"{datadir}/d02_bwa"
#markdupdir = f"{datadir}/d03_markdups"
#bqsrdir    = f"{datadir}/d04_bqsr"
#metricsdir = f"{datadir}/d05_metrics"
#multiqcdir = f"{datadir}/d06_multiqc"
#
## Set constraints for wildcards
#wildcard_constraints:
#    sample  = "|".join(samples),
#    pair    = "|".join(pairs)
#
## Rules
#include: "rules/reference.smk"
#include: "rules/fastq.smk"
#include: "rules/fastp.smk"
#include: "rules/bwa.smk"
#include: "rules/markdups.smk"
#include: "rules/bqsr.smk"
#include: "rules/metrics.smk"
#include: "rules/multiqc.smk"
#
#
## Main target
#rule all:
#    input:
#        rules.run_bqsr.input,
#        rules.run_metrics.input,
#        rules.run_multiqc.input
